name: CI USING CUSTOM DOCKER IMAGE
on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-custom-runner-image:
    runs-on: ubuntu-latest
    outputs:
      custom_image_name: ${{ steps.image_build.outputs.full_image_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Custom Runner Image
        id: image_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ vars.GIT_REPO }}/custom-java-runner:${{ github.sha }}
            ghcr.io/${{ vars.GIT_REPO }}/custom-java-runner:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-test-application:
    runs-on: ubuntu-latest
    needs: build-custom-runner-image
    container:
      image: ${{ needs.build-custom-runner-image.outputs.custom_image_name }}
      options: --user root
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build Spring Boot App
        run: ./gradlew build -x test

      - name: Run Tests
        run: ./gradlew test

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: build/libs/*.jar

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/test/

  deploy-application:
    runs-on: ubuntu-latest
    needs: build-and-test-application
    container:
      image: ${{ needs.build-custom-runner-image.outputs.custom_image_name }}
      options: --user root
    steps:
      - name: Download Application Artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: .

      - name: Deploy Application
        run: |
          echo "Deployment started..."
          echo "Application deployed."  
